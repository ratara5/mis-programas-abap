*&---------------------------------------------------------------------*
*& Report  Y_BAPI_ENTRYSHEET
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

REPORT y_bapi_entrysheet.

* SE SELECCIONA ITEM DE PEDIDO
DATA: BEGIN OF t_pedido OCCURS 0,
  ebeln LIKE ekko-ebeln,
  ebelp LIKE ekpo-ebelp,
  txz01 LIKE essr-txz01,
  dlort LIKE essr-dlort,
  lzvon LIKE essr-lzvon,
  lzbis LIKE essr-lzbis,
  sbnamag LIKE essr-sbnamag,
  sbnaman LIKE essr-sbnaman,
  pwwe LIKE essr-pwwe,
  pwfr LIKE essr-pwfr,
  packno LIKE ekpo-packno,
  menge LIKE ekpo-menge,
END OF t_pedido.

DATA: t_esll LIKE esll OCCURS 0 WITH HEADER LINE.

DATA: wa_cabecera LIKE bapiessrc,
lv_pedido LIKE bapiessr-sheet_no,
t_return TYPE TABLE OF bapiret2 WITH HEADER LINE,
t_return2 TYPE TABLE OF bapiret2 WITH HEADER LINE,
wa_return2 LIKE LINE OF t_return2,
t_items TYPE TABLE OF bapiesllc WITH HEADER LINE.

*SE OBTIENE LOS DATOS DEL PEDIDO
SELECT ebeln ebelp packno FROM ekpo INTO CORRESPONDING FIELDS OF TABLE t_pedido
WHERE ebeln = '3100000003'.

*SE COMPLETAN ALGUNOS DATOS PARA LA BAPI
LOOP AT t_pedido.
  t_pedido-lzvon = sy-datum.
  t_pedido-lzbis = sy-datum.
  t_pedido-sbnamag = sy-uname.
  t_pedido-sbnaman = sy-uname.
  t_pedido-pwwe = '75'.
  t_pedido-pwfr = '75'.
  t_pedido-menge = 1.
  MODIFY t_pedido.
ENDLOOP.

SORT t_pedido.


*SE RECORREN LOS PEDIDOS PARA LA EJECUCIÓN
LOOP AT t_pedido.
  REFRESH: t_items, t_esll.
*   Busca los servicios del item de pedido
  CALL FUNCTION 'MS_READ_SERVICES'
    EXPORTING
      i_hpackno = t_pedido-packno
    TABLES
      t_esll    = t_esll
    EXCEPTIONS
      not_found = 1
      OTHERS    = 2.

*VERIFICAR QUE LA TABLA NO ESTE VACIA
  CHECK NOT t_esll[] IS INITIAL.

*LLENA WORKAREA DE CABECERA Y DETALLE DE HOJA DE ENTRADA DE SERVICIO CON LOS DATOS DE LA TABLA DE PEDIDO t_pedido
  CLEAR wa_cabecera.
  wa_cabecera-po_number = t_pedido-ebeln.
  wa_cabecera-po_item = t_pedido-ebelp.
  wa_cabecera-begdate = sy-datum.
  wa_cabecera-enddate = sy-datum.
  wa_cabecera-pckg_no = '1'.
  wa_cabecera-person_int = t_pedido-sbnamag.
  wa_cabecera-person_ext = t_pedido-sbnaman.
  wa_cabecera-score_time = t_pedido-pwwe.
  wa_cabecera-score_qual = t_pedido-pwfr.
  wa_cabecera-short_text = t_pedido-txz01.
  wa_cabecera-location = t_pedido-dlort.
  wa_cabecera-acceptance = 'X'.
  wa_cabecera-doc_date = sy-datum.
  wa_cabecera-post_date = sy-datum.

*VALORES POR DEFECTO PARA LA TABLA DE ITEMS: EN CASO DE QUE EL PACKAGE(ACEPTACIÓN) ESTUVIERA MARCADO (?)
  CLEAR t_items.
  t_items-pckg_no = '1'.
  t_items-line_no = '1'.
  t_items-outl_ind = 'x'.
  t_items-subpckg_no = '2'.
  t_items-quantity = '1'.
  APPEND t_items.

*LLENAR LA TABLA DE ITEMS t_items CON LOS DATOS DE LA TABLA DE LÍNEAS DE SERVICIO t_esll
  LOOP AT t_esll WHERE package IS INITIAL.
    t_items-pckg_no = '2'.
    t_items-line_no = t_items-line_no + 1.
    t_items-outl_ind = ''.
    CLEAR t_items-subpckg_no.
    t_items-quantity = t_esll-menge.
    t_items-base_uom = t_esll-meins.
    t_items-price_unit = t_esll-peinh.
    IF t_esll-menge GT 0.
      t_items-gr_price = t_esll-netwr / t_esll-menge.
    ENDIF.
    t_items-pln_pckg = t_esll-packno.
    t_items-pln_line = t_esll-introw.
    t_items-short_text = t_esll-ktext1.
    APPEND t_items.
  ENDLOOP.

*BAPI PARA CREAR HOJA DE ENTRADA DE SERVICIOS
*  CALL FUNCTION 'BAPI_ENTRYSHEET_CREATE'
*    EXPORTING
*      entrysheetheader   = wa_cabecera
*    IMPORTING
*      entrysheet         = lv_pedido
*    TABLES
*      entrysheetservices = t_items
*      return             = t_return.

ENDLOOP.